# ************************** BEGIN LICENSE BLOCK ******************************
#
# Copyright Â© 2024 Christian Stolze
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ************************** END LICENSE BLOCK ********************************

# This Dockerfile describes the containerization of the Renderhive Service App's backend for development (with hot reloading)

# COMPILE THE APP
# #############################################################################
# Builder stage to build the Go binary
FROM golang:buster as builder

# Set environment variables
ENV CGO_ENABLED=0 
ENV GOOS=linux

# Set the working directory inside the container
WORKDIR /app

# Create a non-root user 'renderhive' and a usergroup 'docker' for the container
RUN groupadd --system docker && useradd --system --home /home/renderhive -g docker renderhive

# Create the home directory and ensure 'renderhive' has ownership
RUN mkdir -p /home/renderhive && chown -R renderhive:docker /home/renderhive

# install dependencies
RUN apt-get update 
RUN curl -fsSL https://deb.nodesource.com/setup_21.x | bash -
RUN apt-get install -y nodejs git 
RUN apt-get install -y \
    libgl1-mesa-dev \
    libxi6 \
    libxrender1 \
    libxrandr2 \
    libxfixes3 \
    libxcursor1 \
    libxinerama1 \
    libglu1-mesa \
    libsm6 \
    libfontconfig1 \
    libxkbcommon0 \
    libxxf86vm1 \
    libpulse0 \
    libfreetype6 \
    liblzma5 \
    liblcms2-2 \
    libx11-6 \
    libepoxy0 \
    python \
    wayland-protocols
# libx11-6 libxrender1 libxxf86vm1
RUN npm install -g @web3-storage/w3cli

# Copy Go module files (since volume mapping is only active after the building stage)
COPY ./backend/src/go.mod ./backend/src/go.sum ./

# Load Go modules
RUN go mod download
RUN go install github.com/cosmtrek/air@latest

# Assign ownership of the /app directory to the local container user
RUN chown -R renderhive:docker /app

# Switch to user 'renderhive'
USER renderhive

# compile with hot reloading
CMD ["air", "-c", ".air.toml"]